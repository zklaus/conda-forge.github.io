"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[6211],{98607:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2024/01/29/rust-175-osx-sdk","metadata":{"permalink":"/news/2024/01/29/rust-175-osx-sdk","source":"@site/news/2024-01-29-rust-175-osx-sdk.md","title":"Rust 1.75 requires setting newer MACOSX_DEPLOYMENT_TARGET","description":"With the release of rust 1.75, we now require setting the minimal","date":"2024-01-29T00:00:00.000Z","formattedDate":"January 29, 2024","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"nextItem":{"title":"Python 3.12 migration and Python 3.11 by default","permalink":"/news/2023/09/25/python-312-migration-and-python-311-by-default"}},"content":"With the release of `rust 1.75`, we now require setting the minimal\\n`MACOSX_DEPLOYMENT_TARGET` to at least `10.12`. You can do this by appending\\n`recipe/conda_build_config.yaml` with the following content:\\n\\n```yaml\\nMACOSX_DEPLOYMENT_TARGET:  # [osx and x86]\\n  - \'10.12\'                # [osx and x86]\\n```\\n\\nYou should also add a run dependency on the respective OSX version:\\n\\n```yaml\\n  run:\\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\\"10.9\\") }}  # [osx and x86_64]\\n```\\n\\nThe latter is also set automatically via a `run_exports` of\\nthe `compiler(\'rust\')` package, but we add this line if you would increase\\nthe deployment target later in the feedstock for unrelated reasons."},{"id":"/2023/09/25/python-312-migration-and-python-311-by-default","metadata":{"permalink":"/news/2023/09/25/python-312-migration-and-python-311-by-default","source":"@site/news/2023-09-25-python-312-migration-and-python-311-by-default.md","title":"Python 3.12 migration and Python 3.11 by default","description":"With the Python 3.12 release approaching, we have already started the","date":"2023-09-25T00:00:00.000Z","formattedDate":"September 25, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Rust 1.75 requires setting newer MACOSX_DEPLOYMENT_TARGET","permalink":"/news/2024/01/29/rust-175-osx-sdk"},"nextItem":{"title":"Bumping Minimum MacOS version to 10.13","permalink":"/news/2023/08/24/bumping-minimum-macos-version-to-1013"}},"content":"With the Python 3.12 release approaching, we have already started the\\nrebuild of packages for it. Although, there is no offical Python 3.12\\nrelease yet, the release candidates of it will have the same ABI. Thus\\npackages built with the release candidate can be safely used with the\\nlater offical release. To support rebuilding packages on conda-forge\\nwhile ensuring Python release candidates don\'t end up in end-user\\nsolves, we have uploaded the Python 3.12.0rc2 and rc3 builds to the\\n`conda-forge/label/python_rc` channel. The `python312` migration adds\\nthis channel in the feedstock builds to the Python 3.12 matrix entry. On\\nthe offical release of Python 3.12, we will adjust the migration and\\nremove the channel again. Then (on a rerender), feedstock will only\\nconsume the main channel again.\\n\\nOverall, this approach allows us to provide Python 3.12 for a wide range\\nof packages already on the day of the offical Python 3.12 release.\\nAt the same time, we have stopped the Python 3.11 migration and added it\\nto the list of default Python versions on conda-forge."},{"id":"/2023/08/24/bumping-minimum-macos-version-to-1013","metadata":{"permalink":"/news/2023/08/24/bumping-minimum-macos-version-to-1013","source":"@site/news/2023-08-24-bumping-minimum-macos-version-to-1013.md","title":"Bumping Minimum MacOS version to 10.13","description":"We will bump the minimum MacOS version from 10.9 (released in Oct. 2013,","date":"2023-08-24T00:00:00.000Z","formattedDate":"August 24, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Python 3.12 migration and Python 3.11 by default","permalink":"/news/2023/09/25/python-312-migration-and-python-311-by-default"},"nextItem":{"title":"End-of-life for CentOS 6","permalink":"/news/2023/07/12/end-of-life-for-centos-6"}},"content":"We will bump the minimum MacOS version from 10.9 (released in Oct. 2013,\\nend-of-life since Dec. 2016) to 10.13 (released Sept. 2017, end-of-life\\nsince Dec. 2020). The main reason we managed to support 10.9 this long\\nat all, is that conda-forge is able to ship an up-to-date C++ standard\\nlibrary for OSX, `libcxx`, superseding the old one present in the MacOS\\nSDK on the system (at least from the point-of-view of the respective\\nconda environments).\\n\\nHowever, several core packages in the ecosystem now require at least\\n10.13 (or will very soon), in a way that we cannot be circumvent. These\\npackages include `libcxx`,\\n[starting](https://discourse.llvm.org/t/libc-bumping-minimal-deployment-target-for-building-the-dylib-static-library-on-macos/68912)\\nwith version 17.0. This change will not affect already published\\nartifacts, but in the near future, all new builds for OSX will require\\nat least 10.13. This constraint will be implemented through the `__osx`\\nvirtual package, but the details of how we will achieve this are still\\nbeing worked out. Only `conda` versions 4.8.0 or newer have this virtual\\npackage. If you are using a system with MacOS older than 10.13 and are\\nusing `conda` older than 4.8.0, you will need to either upgrade `conda`\\nto at least 4.8.0 or upgrade your system to at least MacOS 10.13."},{"id":"/2023/07/12/end-of-life-for-centos-6","metadata":{"permalink":"/news/2023/07/12/end-of-life-for-centos-6","source":"@site/news/2023-07-12-end-of-life-for-centos-6.md","title":"End-of-life for CentOS 6","description":"As you may be aware, we have delayed the deprecation of our CentOS 6 build system the linux64","date":"2023-07-12T00:00:00.000Z","formattedDate":"July 12, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Bumping Minimum MacOS version to 10.13","permalink":"/news/2023/08/24/bumping-minimum-macos-version-to-1013"},"nextItem":{"title":"conda-forge Google Group is Now Read-only - Move to Discourse","permalink":"/news/2023/01/09/conda-forge-google-group-is-now-read-only-move-to-discourse"}},"content":"As you may be aware, we have delayed the deprecation of our CentOS 6 build system the `linux64`\\nplatform several times. We have now set a formal deprecation date to be June 30, 2024. This date\\nmatches the [end of extended life-cycle support](https://access.redhat.com/articles/4038291) from\\nRedHat for RHEL 6. After this date, we build packages against CentOS 7 by default for `linux64`."},{"id":"/2023/01/09/conda-forge-google-group-is-now-read-only-move-to-discourse","metadata":{"permalink":"/news/2023/01/09/conda-forge-google-group-is-now-read-only-move-to-discourse","source":"@site/news/2023-01-09-conda-forge-google-group-is-now-read-only-move-to-discourse.md","title":"conda-forge Google Group is Now Read-only - Move to Discourse","description":"We have made the conda-forge Google Group read-only. Please use the new","date":"2023-01-09T00:00:00.000Z","formattedDate":"January 9, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"End-of-life for CentOS 6","permalink":"/news/2023/07/12/end-of-life-for-centos-6"},"nextItem":{"title":"conda-forge/staged-recipes Feedstock Creation Job Moved","permalink":"/news/2023/01/08/conda-forge-staged-recipes-feedstock-creation-job-moved"}},"content":"We have made the conda-forge Google Group read-only. Please use the new\\nconda-forge [discourse\\nforum](https://conda.discourse.group/c/pkg-building/conda-forge/25), our\\n[Gitter room](https://gitter.im/conda-forge/conda-forge.github.io), or\\nit\'s [Matrix/Element\\ncounterpart](https://app.element.io/#/room/#conda-forge-space:matrix.org)\\ninstead."},{"id":"/2023/01/08/conda-forge-staged-recipes-feedstock-creation-job-moved","metadata":{"permalink":"/news/2023/01/08/conda-forge-staged-recipes-feedstock-creation-job-moved","source":"@site/news/2023-01-08-conda-forge-staged-recipes-feedstock-creation-job-moved.md","title":"conda-forge/staged-recipes Feedstock Creation Job Moved","description":"We have moved the CI job that makes new feedstocks to our","date":"2023-01-08T00:00:00.000Z","formattedDate":"January 8, 2023","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"conda-forge Google Group is Now Read-only - Move to Discourse","permalink":"/news/2023/01/09/conda-forge-google-group-is-now-read-only-move-to-discourse"},"nextItem":{"title":"Moving to .conda Artifacts","permalink":"/news/2022/11/16/moving-to-conda-artifacts"}},"content":"We have moved the CI job that makes new feedstocks to our\\n[conda-forge/admin-requests](https://github.com/conda-forge/admin-requests)\\nrepo. The new location is reflected in the various links on repos and\\nour status page."},{"id":"/2022/11/16/moving-to-conda-artifacts","metadata":{"permalink":"/news/2022/11/16/moving-to-conda-artifacts","source":"@site/news/2022-11-16-moving-to-conda-artifacts.md","title":"Moving to .conda Artifacts","description":"conda-forge is moving to producing conda artifacts in the version 2","date":"2022-11-16T00:00:00.000Z","formattedDate":"November 16, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"conda-forge/staged-recipes Feedstock Creation Job Moved","permalink":"/news/2023/01/08/conda-forge-staged-recipes-feedstock-creation-job-moved"},"nextItem":{"title":"Releasing Python 3.8.14, 3.9.14, and 3.10.7","permalink":"/news/2022/11/04/releasing-python-3814-3914-and-3107"}},"content":"conda-forge is moving to producing `conda` artifacts in the version 2\\npackage format (also known as `.conda`). These artifacts allow for more\\nefficient indexing and maintenance of the ecosystem. Our admin\\nmigrations bot will begin making PRs to feedstocks to change them over\\nto the new artifact format. You will need `conda` version 4.7 or later\\nto use the new `.conda` artifacts. Please leave a comment on [this\\nissue](https://github.com/conda-forge/conda-forge.github.io/issues/1586)\\nif you encounter problems or have feedback."},{"id":"/2022/11/04/releasing-python-3814-3914-and-3107","metadata":{"permalink":"/news/2022/11/04/releasing-python-3814-3914-and-3107","source":"@site/news/2022-11-04-releasing-python-3814-3914-and-3107.md","title":"Releasing Python 3.8.14, 3.9.14, and 3.10.7","description":"The CPython versions 3.8.14, 3.9.14, and 3.10.7 were released some weeks","date":"2022-11-04T00:00:00.000Z","formattedDate":"November 4, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Moving to .conda Artifacts","permalink":"/news/2022/11/16/moving-to-conda-artifacts"},"nextItem":{"title":"Conda Moving to CalVer","permalink":"/news/2022/09/27/conda-moving-to-calver"}},"content":"The CPython versions 3.8.14, 3.9.14, and 3.10.7 were released some weeks\\nago to mitigate\\n[CVE-2020-10735](https://nvd.nist.gov/vuln/detail/CVE-2020-10735). The\\nchosen mitigation strategy might cause errors (e.g.\\n`ValueError: Exceeds the limit (4300) for integer string conversion`) in\\nsome libraries. If you are affected, please read the\\n[announcement](https://docs.python.org/release/3.10.7/whatsnew/3.10.html#notable-security-feature-in-3-10-7)\\nand learn about the available workarounds in the [CPython\\ndocumentation](https://docs.python.org/3/library/stdtypes.html#integer-string-conversion-length-limitation).\\n\\nThe conda-forge team [has\\ndecided](https://github.com/conda-forge/python-feedstock/pull/579) to\\nbuild and publish these releases with no additional changes. The new\\npackages will be made available on or after 2022-11-10, following\\n[Anaconda\'s decision](https://anaconda.cloud/anaconda-repo-news)."},{"id":"/2022/09/27/conda-moving-to-calver","metadata":{"permalink":"/news/2022/09/27/conda-moving-to-calver","source":"@site/news/2022-09-27-conda-moving-to-calver.md","title":"Conda Moving to CalVer","description":"Conda is moving to CalVer per [CEP","date":"2022-09-27T00:00:00.000Z","formattedDate":"September 27, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Releasing Python 3.8.14, 3.9.14, and 3.10.7","permalink":"/news/2022/11/04/releasing-python-3814-3914-and-3107"},"nextItem":{"title":"Dropping Python 3.7","permalink":"/news/2022/08/24/dropping-python-37"}},"content":"Conda is moving to CalVer per [CEP\\n8](https://github.com/conda-incubator/ceps/blob/main/cep-8.md). The\\nfirst CalVer and last SemVer should be `22.9.0` and `4.14.0`\\nrespectively. This change maintains version order so you should not\\nexpect any issues."},{"id":"/2022/08/24/dropping-python-37","metadata":{"permalink":"/news/2022/08/24/dropping-python-37","source":"@site/news/2022-08-24-dropping-python-37.md","title":"Dropping Python 3.7","description":"Conda-Forge has been providing support for Python 3.7 for 4 years now.","date":"2022-08-24T00:00:00.000Z","formattedDate":"August 24, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Conda Moving to CalVer","permalink":"/news/2022/09/27/conda-moving-to-calver"},"nextItem":{"title":"Dropping PyPy 3.7","permalink":"/news/2022/08/17/dropping-pypy-37"}},"content":"Conda-Forge has been providing support for Python 3.7 for 4 years now.\\n\\nIncreasingly projects are moving off it (particularly in the PyData\\ncommunity). With Python 3.11\'s release coming around the corner (October\\n3rd), conda-forge plans to drop Python 3.7 support when Python 3.11\\ncomes out. This will lighten the load on conda-forge infrastructure and\\nmake room for the new versions the community would like to support.\\n\\nMore details can be found in issue\\n[conda-forge-pinning-feedstock#2623](https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/2623). Feedback is welcome there."},{"id":"/2022/08/17/dropping-pypy-37","metadata":{"permalink":"/news/2022/08/17/dropping-pypy-37","source":"@site/news/2022-08-17-dropping-pypy-37.md","title":"Dropping PyPy 3.7","description":"Conda-forge has supported PyPy since almost 2.5 years now, and the","date":"2022-08-17T00:00:00.000Z","formattedDate":"August 17, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Dropping Python 3.7","permalink":"/news/2022/08/24/dropping-python-37"},"nextItem":{"title":"Moving to Visual Studio toolchain vc142","permalink":"/news/2022/08/11/moving-to-visual-studio-toolchain-vc142"}},"content":"Conda-forge has supported PyPy since almost 2.5 years now, and the\\ninitial PyPy 3.7 builds have been superseded in almost all aspects by\\nthe newer builds for 3.8 & 3.9. We are therefore dropping PyPy 3.7 as a\\nsupported python version, and will keep focusing on the more\\ncontemporary PyPy builds."},{"id":"/2022/08/11/moving-to-visual-studio-toolchain-vc142","metadata":{"permalink":"/news/2022/08/11/moving-to-visual-studio-toolchain-vc142","source":"@site/news/2022-08-11-moving-to-visual-studio-toolchain-vc142.md","title":"Moving to Visual Studio toolchain vc142","description":"Microsoft has deprecated the Visual Studio (VS) 2017 compiler and","date":"2022-08-11T00:00:00.000Z","formattedDate":"August 11, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Dropping PyPy 3.7","permalink":"/news/2022/08/17/dropping-pypy-37"},"nextItem":{"title":"Azure OSX VM Image Bumped to Version 11","permalink":"/news/2022/07/22/azure-osx-vm-image-bumped-to-version-11"}},"content":"Microsoft has deprecated the Visual Studio (VS) 2017 compiler and\\nremoved it from all the CI they control (notably Azure Pipelines &\\nGithub Actions). This means that the default toolchain (== C/C++\\ncompiler, linker, standard libraries, and related utilities) of that VS\\nversion - vc141 - is getting less and less use in upstream libraries\\n(because public hosted CI doesn\'t use it anymore by default), and\\ntherefore support for it is bitrotting at an accelerating pace. We are\\ntherefore\\n[planning](https://github.com/conda-forge/conda-forge-pinning-feedstock/pull/3167)\\nto move our toolchain on windows to vc142 (the default in VS2019) in two\\nweeks, on 2022-08-25.\\n\\nThis will not affect you as a general user of conda-forge packages on\\nwindows; the only impact is that if you are locally compiling against\\nartefacts produced by conda-forge and are still using VS2017 yourself,\\nyou will need to upgrade your compiler (VS2019 is a drop-in replacement\\n& ABI-compatible)."},{"id":"/2022/07/22/azure-osx-vm-image-bumped-to-version-11","metadata":{"permalink":"/news/2022/07/22/azure-osx-vm-image-bumped-to-version-11","source":"@site/news/2022-07-22-azure-osx-vm-image-bumped-to-version-11.md","title":"Azure OSX VM Image Bumped to Version 11","description":"Azure is removing their OSX 10.15 VM image and so we are bumping to 11.","date":"2022-07-22T00:00:00.000Z","formattedDate":"July 22, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Moving to Visual Studio toolchain vc142","permalink":"/news/2022/08/11/moving-to-visual-studio-toolchain-vc142"},"nextItem":{"title":"Packages for Qt/PyQt 5.15.2 are now available","permalink":"/news/2022/04/23/packages-for-qtpyqt-5152-are-now-available"}},"content":"Azure is removing their OSX 10.15 VM image and so we are bumping to 11.\\nYou will need to rerender your feedstock to get this change. Feedstocks\\nwithout the new VM image specified will not build after Azure fully\\nremoves the old image. Please get in touch with us if you have issues or\\nquestions!"},{"id":"/2022/04/23/packages-for-qtpyqt-5152-are-now-available","metadata":{"permalink":"/news/2022/04/23/packages-for-qtpyqt-5152-are-now-available","source":"@site/news/2022-04-23-packages-for-qtpyqt-5152-are-now-available.md","title":"Packages for Qt/PyQt 5.15.2 are now available","description":"After more than six months, the conda-forge team and contributors have","date":"2022-04-23T00:00:00.000Z","formattedDate":"April 23, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Azure OSX VM Image Bumped to Version 11","permalink":"/news/2022/07/22/azure-osx-vm-image-bumped-to-version-11"},"nextItem":{"title":"New Semi-automated PR Labeling in conda-forge/staged-recipes","permalink":"/news/2022/04/20/new-semi-automated-pr-labeling-in-conda-forgestaged-recipes"}},"content":"After more than six months, the conda-forge team and contributors have\\nmanaged to update the Qt5 packages to the latest LTS version, 5.15.2.\\nMajor changes include separating the package for QtWebEngine\\n(`qt-webengine`) from the rest of Qt (now in a new package called\\n`qt-main`). This allows recipes that do not use any of the WebEngine\\ncomponents to depend only on `qt-main`, reducing the total size of the\\ndownloaded binaries. As a result of this, `qt` will be a metapackage\\nthat installs both `qt-main` and `qt-webengine` as dependencies.\\nWith respect to PyQt, the new packages now are in sync with respect to\\ntheir corresponding PyPI releases, which means that the `pyqt` package\\nwill only provide the core components of Qt, leaving `pyqtwebengine` and\\n`pyqtcharts` as optional packages that extend PyQt by providing the\\nQtWebEngine and QtCharts components, respectively. A migrator will be\\nput in place to help with the transition."},{"id":"/2022/04/20/new-semi-automated-pr-labeling-in-conda-forgestaged-recipes","metadata":{"permalink":"/news/2022/04/20/new-semi-automated-pr-labeling-in-conda-forgestaged-recipes","source":"@site/news/2022-04-20-new-semi-automated-pr-labeling-in-conda-forgestaged-recipes.md","title":"New Semi-automated PR Labeling in conda-forge/staged-recipes","description":"A GitHub action now monitors comments on issues in staged-recipes and","date":"2022-04-20T00:00:00.000Z","formattedDate":"April 20, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Packages for Qt/PyQt 5.15.2 are now available","permalink":"/news/2022/04/23/packages-for-qtpyqt-5152-are-now-available"},"nextItem":{"title":"CircleCI and Drone.io Deprecated for New Feedstocks","permalink":"/news/2022/04/03/circleci-and-droneio-deprecated-for-new-feedstocks"}},"content":"A GitHub action now monitors comments on issues in staged-recipes and\\nwill add language and review labels to issues/PRs when a staged-recipes\\nsub-team is mentioned in a comment. It adds the Awaiting author\\ncontribution label if a member of staged-recipes removes the\\nreview-requested label. Unlike notifications, which are only sent to the\\nusers which are members of a team at the time of the mention, labels are\\npersistent and visible to everyone, so they should be very helpful for\\nidentifying old PRs that need attention."},{"id":"/2022/04/03/circleci-and-droneio-deprecated-for-new-feedstocks","metadata":{"permalink":"/news/2022/04/03/circleci-and-droneio-deprecated-for-new-feedstocks","source":"@site/news/2022-04-03-circleci-and-droneio-deprecated-for-new-feedstocks.md","title":"CircleCI and Drone.io Deprecated for New Feedstocks","description":"Due to technical issues in generating new feedstocks, we have deprecated","date":"2022-04-03T00:00:00.000Z","formattedDate":"April 3, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"New Semi-automated PR Labeling in conda-forge/staged-recipes","permalink":"/news/2022/04/20/new-semi-automated-pr-labeling-in-conda-forgestaged-recipes"},"nextItem":{"title":"PyPy 3.8+3.9 Migration","permalink":"/news/2022/03/28/pypy-38-39-migration"}},"content":"Due to technical issues in generating new feedstocks, we have deprecated\\nusing CircleCI and Drone.io for builds of new feedstocks. Existing\\nCircleCI builds, if any, should be moved to azure. Existing Drone.io\\nbuilds can be moved to Travis CI or cross-compiled/emulated builds on\\nazure."},{"id":"/2022/03/28/pypy-38-39-migration","metadata":{"permalink":"/news/2022/03/28/pypy-38-39-migration","source":"@site/news/2022-03-28-pypy-38-39-migration.md","title":"PyPy 3.8+3.9 Migration","description":"We have begun rolling out packages built for PyPy3.8 and PyPy3.9. This","date":"2022-03-28T00:00:00.000Z","formattedDate":"March 28, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"CircleCI and Drone.io Deprecated for New Feedstocks","permalink":"/news/2022/04/03/circleci-and-droneio-deprecated-for-new-feedstocks"},"nextItem":{"title":"Travis CI Usage Deprecated for win_*, osx_*, and linux_64 Platforms","permalink":"/news/2022/03/06/travis-ci-usage-deprecated-for-win-osx-and-linux64-platforms"}},"content":"We have begun rolling out packages built for PyPy3.8 and PyPy3.9. This\\nwork may take a few weeks. See `pypy` in the user docs for information\\non how to set up a PyPy environment. Please report issues to the PyPy\\ndevelopers at https://foss.heptapod.net/pypy/pypy. We are also\\ndropping PyPy3.7 in each feedstock as the newer versions of PyPy are\\nadded. New versions of migrated feedstocks will not be built for PyPy3.7\\nand that version of the python interpreter will not be receiving\\nupdates. As usual, you can track the status of the migration on our\\nstatus page."},{"id":"/2022/03/06/travis-ci-usage-deprecated-for-win-osx-and-linux64-platforms","metadata":{"permalink":"/news/2022/03/06/travis-ci-usage-deprecated-for-win-osx-and-linux64-platforms","source":"@site/news/2022-03-06-travis-ci-usage-deprecated-for-win-osx-and-linux64-platforms.md","title":"Travis CI Usage Deprecated for win_*, osx_*, and linux_64 Platforms","description":"Due to changes in how Travis CI tracks open-source build time, we are","date":"2022-03-06T00:00:00.000Z","formattedDate":"March 6, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"PyPy 3.8+3.9 Migration","permalink":"/news/2022/03/28/pypy-38-39-migration"},"nextItem":{"title":"Default branch migration from master to main","permalink":"/news/2022/02/13/default-branch-migration-from-master-to-main"}},"content":"Due to changes in how Travis CI tracks open-source build time, we are\\ndeprecating using it for the `win_*`, `osx_*`, and `linux_64` platforms.\\n\\nTravis CI will be available only for platforms in their [partner\\nqueues](https://docs.travis-ci.com/user/billing-overview/#partner-queue-solution).\\nThese platforms currently include `ppc64le`, `aarch64` and `s390x`.\\n\\nRerendering will raise an error if Travis CI is used for a non-partner\\nqueue platform in the conda-forge GitHub organization."},{"id":"/2022/02/13/default-branch-migration-from-master-to-main","metadata":{"permalink":"/news/2022/02/13/default-branch-migration-from-master-to-main","source":"@site/news/2022-02-13-default-branch-migration-from-master-to-main.md","title":"Default branch migration from master to main","description":"We will be migrating the default branches of all feedstocks and other","date":"2022-02-13T00:00:00.000Z","formattedDate":"February 13, 2022","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Travis CI Usage Deprecated for win_*, osx_*, and linux_64 Platforms","permalink":"/news/2022/03/06/travis-ci-usage-deprecated-for-win-osx-and-linux64-platforms"},"nextItem":{"title":"CentOS 7 docker images are now the default","permalink":"/news/2021/12/02/centos-7-docker-images-are-now-the-default"}},"content":"We will be migrating the default branches of all feedstocks and other\\nconda-forge repos from `master` to `main`. We do expect some minor\\nhiccups while this migration is going on. You will need to change to the\\n`main` branch from `master` on any local clones via the following git\\ncommands:\\n\\n``` \\ngit branch -m master main \\ngit fetch origin \\ngit branch -u origin/main main \\ngit remote set-head origin -a\\n```\\n\\nIf you encounter any problems, please comment on this Github\\n[issue](https://github.com/conda-forge/conda-forge.github.io/issues/1162)."},{"id":"/2021/12/02/centos-7-docker-images-are-now-the-default","metadata":{"permalink":"/news/2021/12/02/centos-7-docker-images-are-now-the-default","source":"@site/news/2021-12-02-centos-7-docker-images-are-now-the-default.md","title":"CentOS 7 docker images are now the default","description":"We are moving all conda-forge linux-64 jobs to use CentOS 7-based","date":"2021-12-02T00:00:00.000Z","formattedDate":"December 2, 2021","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Default branch migration from master to main","permalink":"/news/2022/02/13/default-branch-migration-from-master-to-main"},"nextItem":{"title":"cloud.drone.io no longer working","permalink":"/news/2021/11/17/clouddroneio-no-longer-working"}},"content":"We are moving all conda-forge `linux-64` jobs to use CentOS 7-based\\ndocker images. This will help users avoid `conda/mamba` solver errors\\nwhere dependencies that need CentOS 7 cannot be installed. Importantly,\\nour compiler stack will still default to using a CentOS 6 sysroot unless\\nthe recipe explicitly lists the CentoOS 7 sysroot package. This build\\nconfiguration means that our core system ABI on linux will remain\\nlargely CentOS 6-compatible, keeping support for older systems largely\\nintact. We will reconsider moving the default ABI to CentOS 7 at a later\\ndate."},{"id":"/2021/11/17/clouddroneio-no-longer-working","metadata":{"permalink":"/news/2021/11/17/clouddroneio-no-longer-working","source":"@site/news/2021-11-17-clouddroneio-no-longer-working.md","title":"cloud.drone.io no longer working","description":"The cloud.drone.io service we use for aarch64 builds is no longer","date":"2021-11-17T00:00:00.000Z","formattedDate":"November 17, 2021","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"CentOS 7 docker images are now the default","permalink":"/news/2021/12/02/centos-7-docker-images-are-now-the-default"},"nextItem":{"title":"conda-forge now uses mambabuild as default","permalink":"/news/2021/10/20/conda-forge-now-uses-mambabuild-as-default"}},"content":"The `cloud.drone.io` service we use for `aarch64` builds is no longer\\naccepting our API requests for triggering builds. We have been in\\ncontact with them, but have been unable to resolve the issue. Going\\nforward, we will still be adding feedstocks to `cloud.drone.io` but we\\nhave moved all `aarch64` builds to emulated builds on `Azure`.\\nCross-compilers are available as well for resource-intensive builds.\\nPlease rerender your feedstock as needed to get the updated\\nconfiguration."},{"id":"/2021/10/20/conda-forge-now-uses-mambabuild-as-default","metadata":{"permalink":"/news/2021/10/20/conda-forge-now-uses-mambabuild-as-default","source":"@site/news/2021-10-20-conda-forge-now-uses-mambabuild-as-default.md","title":"conda-forge now uses mambabuild as default","description":"conda-forge now uses mamba during","date":"2021-10-20T00:00:00.000Z","formattedDate":"October 20, 2021","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"cloud.drone.io no longer working","permalink":"/news/2021/11/17/clouddroneio-no-longer-working"},"nextItem":{"title":"GCC 10 and clang 12 as default compilers for Linux and macOS","permalink":"/news/2021/10/13/gcc-10-and-clang-12-as-default-compilers-for-linux-and-macos"}},"content":"conda-forge now uses [mamba](https://github.com/mamba-org/mamba) during\\nthe build process (via `conda mambabuild` of the\\n[boa](https://github.com/mamba-org/boa) project). This was changed in\\n[conda-smithy\\n3.13.0](https://github.com/conda-forge/conda-smithy/blob/main/CHANGELOG.rst#v3130)\\nand should automatically apply when re-rendering."},{"id":"/2021/10/13/gcc-10-and-clang-12-as-default-compilers-for-linux-and-macos","metadata":{"permalink":"/news/2021/10/13/gcc-10-and-clang-12-as-default-compilers-for-linux-and-macos","source":"@site/news/2021-10-13-gcc-10-and-clang-12-as-default-compilers-for-linux-and-macos.md","title":"GCC 10 and clang 12 as default compilers for Linux and macOS","description":"These compilers will become the default for building packages in","date":"2021-10-13T00:00:00.000Z","formattedDate":"October 13, 2021","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"conda-forge now uses mambabuild as default","permalink":"/news/2021/10/20/conda-forge-now-uses-mambabuild-as-default"},"nextItem":{"title":"Python 3.6 is now dropped when building conda-forge packages","permalink":"/news/2021/10/04/python-36-is-now-dropped-when-building-conda-forge-packages"}},"content":"These compilers will become the default for building packages in\\nconda-forge. One notable change in gcc 10 is that the `-fopenmp`` flag in\\n`FFLAGS` is dropped. In clang 12, `-std=c++14` explicit flag has been\\ndropped from `CXXFLAGS`, as it is the default compilation mode for clang\\n12. In gcc 11, the default is `-std=gnu++17`. In clang>=12 and gcc>=11,\\nwe will not provide an explicit C++ standard, and will defer to the\\ncompiler default."},{"id":"/2021/10/04/python-36-is-now-dropped-when-building-conda-forge-packages","metadata":{"permalink":"/news/2021/10/04/python-36-is-now-dropped-when-building-conda-forge-packages","source":"@site/news/2021-10-04-python-36-is-now-dropped-when-building-conda-forge-packages.md","title":"Python 3.6 is now dropped when building conda-forge packages","description":"Python 3.6 is end-of-life in December 2021 and we are dropping support","date":"2021-10-04T00:00:00.000Z","formattedDate":"October 4, 2021","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"GCC 10 and clang 12 as default compilers for Linux and macOS","permalink":"/news/2021/10/13/gcc-10-and-clang-12-as-default-compilers-for-linux-and-macos"},"nextItem":{"title":"defaults channel is now dropped when building conda-forge packages","permalink":"/news/2021/09/30/defaults-channel-is-now-dropped-when-building-conda-forge-packages"}},"content":"Python 3.6 is end-of-life in December 2021 and we are dropping support\\nfor it early to avoid having to rebuild packages as part of python 3.10\\nmigration as that would save lots of CI resources."},{"id":"/2021/09/30/defaults-channel-is-now-dropped-when-building-conda-forge-packages","metadata":{"permalink":"/news/2021/09/30/defaults-channel-is-now-dropped-when-building-conda-forge-packages","source":"@site/news/2021-09-30-defaults-channel-is-now-dropped-when-building-conda-forge-packages.md","title":"defaults channel is now dropped when building conda-forge packages","description":"You can get the previous behaviour by using the channel_sources","date":"2021-09-30T00:00:00.000Z","formattedDate":"September 30, 2021","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Python 3.6 is now dropped when building conda-forge packages","permalink":"/news/2021/10/04/python-36-is-now-dropped-when-building-conda-forge-packages"},"nextItem":{"title":"conda-forge is now citable!","permalink":"/news/2021/05/22/conda-forge-is-now-citable"}},"content":"You can get the previous behaviour by using the `channel_sources`\\nsetting in `conda-forge.yml`"},{"id":"/2021/05/22/conda-forge-is-now-citable","metadata":{"permalink":"/news/2021/05/22/conda-forge-is-now-citable","source":"@site/news/2021-05-22-conda-forge-is-now-citable.md","title":"conda-forge is now citable!","description":"You can now cite conda-forge using our [Zenodo","date":"2021-05-22T00:00:00.000Z","formattedDate":"May 22, 2021","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"defaults channel is now dropped when building conda-forge packages","permalink":"/news/2021/09/30/defaults-channel-is-now-dropped-when-building-conda-forge-packages"},"nextItem":{"title":"Moving to CentOS 7 and CentOS 6 End-of-Life","permalink":"/news/2020/12/16/moving-to-centos-7-and-centos-6-end-of-life"}},"content":"You can now cite conda-forge using our [Zenodo\\nentry](https://doi.org/10.5281/zenodo.4774216)! This entry credits the\\nentire conda-forge community for its hard work in building our amazing\\necosystem."},{"id":"/2020/12/16/moving-to-centos-7-and-centos-6-end-of-life","metadata":{"permalink":"/news/2020/12/16/moving-to-centos-7-and-centos-6-end-of-life","source":"@site/news/2020-12-16-moving-to-centos-7-and-centos-6-end-of-life.md","title":"Moving to CentOS 7 and CentOS 6 End-of-Life","description":"conda-forge\'s compiler stack uses repackaged libraries from CentOS 6 to","date":"2020-12-16T00:00:00.000Z","formattedDate":"December 16, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"conda-forge is now citable!","permalink":"/news/2021/05/22/conda-forge-is-now-citable"},"nextItem":{"title":"Artifact Validation","permalink":"/news/2020/12/02/artifact-validation"}},"content":"conda-forge\'s compiler stack uses repackaged libraries from CentOS 6 to\\nsupply certain libraries, notably `glibc` when building recipes. We\\ncurrently default to using CentOS 6 with the `glibc` 2.12 ABI. However,\\nCentOS 6 reached end-of-life in November 2020 and increasingly software\\npackages require at least CentOS 7 with the `glibc` 2.17 ABI. We also\\nrealize that due to recent events, some communities that may have been\\nplanning to skip CentOS 7 and move straight to CentOS 8 might be\\nreconsidering those plans. Further, they may not be ready for a\\nfull-scale switch to CentOS 7. Thus the conda-forge core team has\\ndecided to delay moving to CentOS 7 until sometime early next year,\\nlikely the end of January 2021 at the earliest. We are actively looking\\nfor feedback from our users on this issue. Please do\\nget in touch if you have comments or concerns!"},{"id":"/2020/12/02/artifact-validation","metadata":{"permalink":"/news/2020/12/02/artifact-validation","source":"@site/news/2020-12-02-artifact-validation.md","title":"Artifact Validation","description":"In an effort to better secure conda-forge, we are developing a process","date":"2020-12-02T00:00:00.000Z","formattedDate":"December 2, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Moving to CentOS 7 and CentOS 6 End-of-Life","permalink":"/news/2020/12/16/moving-to-centos-7-and-centos-6-end-of-life"},"nextItem":{"title":"Compiler Upgrade to GCC 9.3.0","permalink":"/news/2020/10/08/compiler-upgrade-to-gcc-930"}},"content":"In an effort to better secure conda-forge, we are developing a process\\nto validate artifacts before they are uploaded to `anaconda.org`. This\\nvalidation will look for various security-related items, such as\\nartifacts that overwrite key pieces of certain packages. While this\\nprocess is in development, we will not be rejecting uploads. However, we\\nwill start scanning our current artifacts and working with the\\nmaintainers of those artifacts to mark broken any which we deem a\\nsecurity risk. We will also be running validation on new artifacts being\\nupload and will report any issues back to feedstocks. At a future date,\\nartifacts that do not pass validation will not be uploaded."},{"id":"/2020/10/08/compiler-upgrade-to-gcc-930","metadata":{"permalink":"/news/2020/10/08/compiler-upgrade-to-gcc-930","source":"@site/news/2020-10-08-compiler-upgrade-to-gcc-930.md","title":"Compiler Upgrade to GCC 9.3.0","description":"We will be upgrading all GCC-based compilers to version 9.3.0 on all","date":"2020-10-08T00:00:00.000Z","formattedDate":"October 8, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Artifact Validation","permalink":"/news/2020/12/02/artifact-validation"},"nextItem":{"title":"Completed New Staging Process for anaconda.org Uploads","permalink":"/news/2020/08/07/completed-new-staging-process-for-anacondaorg-uploads"}},"content":"We will be upgrading all `GCC`-based compilers to version `9.3.0` on all\\nplatforms. This upgrade will not affect `C` or `C++` code, but will\\nrequire a rebuild of all feedstocks that use `FORTRAN` due to a change\\nin the `SONAME`. During this rebuild, we will keep the old compiler\\nversions in production, temporarily doubling the build matrix. Once the\\nmigration is deemed complete, these old compiler versions will be\\nremoved."},{"id":"/2020/08/07/completed-new-staging-process-for-anacondaorg-uploads","metadata":{"permalink":"/news/2020/08/07/completed-new-staging-process-for-anacondaorg-uploads","source":"@site/news/2020-08-07-completed-new-staging-process-for-anacondaorg-uploads.md","title":"Completed New Staging Process for anaconda.org Uploads","description":"We have now completed rolling out the new staging process for uploads to","date":"2020-08-07T00:00:00.000Z","formattedDate":"August 7, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Compiler Upgrade to GCC 9.3.0","permalink":"/news/2020/10/08/compiler-upgrade-to-gcc-930"},"nextItem":{"title":"Fixed Maintenance Process for Feedstock Teams","permalink":"/news/2020/08/06/fixed-maintenance-process-for-feedstock-teams"}},"content":"We have now completed rolling out the new staging process for uploads to\\nanaconda.org. Direct uploads to the `conda-forge` channel will no longer\\nwork. If you are having trouble with package uploads, please rerender\\nyour feedstock with the latest version of `conda-smithy`. As always, if\\nyou need help, bump us on Gitter or GitHub!"},{"id":"/2020/08/06/fixed-maintenance-process-for-feedstock-teams","metadata":{"permalink":"/news/2020/08/06/fixed-maintenance-process-for-feedstock-teams","source":"@site/news/2020-08-06-fixed-maintenance-process-for-feedstock-teams.md","title":"Fixed Maintenance Process for Feedstock Teams","description":"We have fixed a bug where the maintainers of feedstocks listed in the","date":"2020-08-06T00:00:00.000Z","formattedDate":"August 6, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Completed New Staging Process for anaconda.org Uploads","permalink":"/news/2020/08/07/completed-new-staging-process-for-anacondaorg-uploads"},"nextItem":{"title":"CentOS 7 sysroot Now Available for linux-64 Builds","permalink":"/news/2020/07/23/centos-7-sysroot-now-available-for-linux-64-builds"}},"content":"We have fixed a bug where the maintainers of feedstocks listed in the\\n`meta.yaml` did not match those listed in the GitHub team. Due to this\\nchange, you may notice emails from GitHub informing you that you have\\nbeen removed from a GitHub team if you have recently removed yourself\\nfrom a feedstock via changing the `meta.yaml`. A similar fix has been\\napplied for maintenance teams as well, though you will not see emails\\nfrom this fix."},{"id":"/2020/07/23/centos-7-sysroot-now-available-for-linux-64-builds","metadata":{"permalink":"/news/2020/07/23/centos-7-sysroot-now-available-for-linux-64-builds","source":"@site/news/2020-07-23-centos-7-sysroot-now-available-for-linux-64-builds.md","title":"CentOS 7 sysroot Now Available for linux-64 Builds","description":"We are very excited to announce that new compilers based on repackaged","date":"2020-07-23T00:00:00.000Z","formattedDate":"July 23, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Fixed Maintenance Process for Feedstock Teams","permalink":"/news/2020/08/06/fixed-maintenance-process-for-feedstock-teams"},"nextItem":{"title":"NumPy 1.16 is the minimal NumPy version on all platforms","permalink":"/news/2020/07/23/numpy-116-is-the-minimal-numpy-version-on-all-platforms"}},"content":"We are very excited to announce that new compilers based on repackaged\\n`sysroot`\'s from CentOS 7 are now available for all `linux-*` platforms.\\nThese compilers will be the default going forward for any `gcc`, `gxx`,\\nand `gfortran` versions past `8.4.0` on `ppc64le` and `7.5.0` on\\n`x86_64`/`aarch64`.\\n\\nOn the `linux-64` platform, we have also built the CentOS 6 `sysroot`\\nand set it as the default, consistent with our current compilers. To use\\nthe CentOS 7 `sysroot` on `linux-64`, add a requirement of\\n`sysroot_linux-64 2.17` to the build section of your recipe. You also\\nneed to set the proper Docker image in your `conda_build_config.yaml`.\\nSee `Using CentOS 7 <centos7>` for details."},{"id":"/2020/07/23/numpy-116-is-the-minimal-numpy-version-on-all-platforms","metadata":{"permalink":"/news/2020/07/23/numpy-116-is-the-minimal-numpy-version-on-all-platforms","source":"@site/news/2020-07-23-numpy-116-is-the-minimal-numpy-version-on-all-platforms.md","title":"NumPy 1.16 is the minimal NumPy version on all platforms","description":"In accordance with","date":"2020-07-23T00:00:00.000Z","formattedDate":"July 23, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"CentOS 7 sysroot Now Available for linux-64 Builds","permalink":"/news/2020/07/23/centos-7-sysroot-now-available-for-linux-64-builds"},"nextItem":{"title":"Strict channel priority in builds for OSX and Linux","permalink":"/news/2020/07/23/strict-channel-priority-in-builds-for-osx-and-linux"}},"content":"In accordance with\\n[NEP-29](https://numpy.org/neps/nep-0029-deprecation_policy.html), we\\nhave switched to have `numpy 1.16` as the minimum supported version on\\nall platforms."},{"id":"/2020/07/23/strict-channel-priority-in-builds-for-osx-and-linux","metadata":{"permalink":"/news/2020/07/23/strict-channel-priority-in-builds-for-osx-and-linux","source":"@site/news/2020-07-23-strict-channel-priority-in-builds-for-osx-and-linux.md","title":"Strict channel priority in builds for OSX and Linux","description":"We have changed the OSX and Linux platforms to enforce strict channel","date":"2020-07-23T00:00:00.000Z","formattedDate":"July 23, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"NumPy 1.16 is the minimal NumPy version on all platforms","permalink":"/news/2020/07/23/numpy-116-is-the-minimal-numpy-version-on-all-platforms"},"nextItem":{"title":"Conda-forge is building openblas with both pthreads and openmp on Linux","permalink":"/news/2020/07/17/conda-forge-is-building-openblas-with-both-pthreads-and-openmp-on-linux"}},"content":"We have changed the OSX and Linux platforms to enforce strict channel\\npriority in package builds. This change means that if a package is\\navailable in the conda-forge channels, the `conda` solver will not\\nconsider any versions of the package from other channels. Users can\\ndisable this by setting `channel_priority: flexible` in their\\n`conda-forge.yml`."},{"id":"/2020/07/17/conda-forge-is-building-openblas-with-both-pthreads-and-openmp-on-linux","metadata":{"permalink":"/news/2020/07/17/conda-forge-is-building-openblas-with-both-pthreads-and-openmp-on-linux","source":"@site/news/2020-07-17-conda-forge-is-building-openblas-with-both-pthreads-and-openmp-on-linux.md","title":"Conda-forge is building openblas with both pthreads and openmp on Linux","description":"The main change is that openblas will use pthreads for threading by","date":"2020-07-17T00:00:00.000Z","formattedDate":"July 17, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Strict channel priority in builds for OSX and Linux","permalink":"/news/2020/07/23/strict-channel-priority-in-builds-for-osx-and-linux"},"nextItem":{"title":"Core Dependency Tree Package Changes","permalink":"/news/2020/07/16/core-dependency-tree-package-changes"}},"content":"The main change is that `openblas` will use pthreads for threading by\\ndefault on Linux instead of the previous `openmp` default. The `openmp`\\nbuilds can be recovered by installing `libopenblas=*=*openmp*`."},{"id":"/2020/07/16/core-dependency-tree-package-changes","metadata":{"permalink":"/news/2020/07/16/core-dependency-tree-package-changes","source":"@site/news/2020-07-16-core-dependency-tree-package-changes.md","title":"Core Dependency Tree Package Changes","description":"conda-forge is moving to a new system for generating Core Dependency","date":"2020-07-16T00:00:00.000Z","formattedDate":"July 16, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Conda-forge is building openblas with both pthreads and openmp on Linux","permalink":"/news/2020/07/17/conda-forge-is-building-openblas-with-both-pthreads-and-openmp-on-linux"},"nextItem":{"title":"Moving from clang 9 to clang 10","permalink":"/news/2020/07/16/moving-from-clang-9-to-clang-10"}},"content":"conda-forge is moving to a new system for generating Core Dependency\\nTree (CDT) packages. These changes include:\\n\\n* CDT packages will no longer be built using feedstocks and this\\npractice is officially deprecated. \\n* Any current CDT packages in\\nfeedstocks will be moved to the new\\n[conda-forge/cdt-builds](https://github.com/conda-forge/cdt-builds) repo\\nand the feedstock will be archived. Members of core will be doing this\\nslowly on an as-needed basis, so it may not happen right away. \\n* Requests for new CDTs should be submitted as PRs to the\\n[conda-forge/cdt-builds](https://github.com/conda-forge/cdt-builds)\\nrepo.\\n\\nThese changes are being made so that conda-forge can provide access to\\nCentOS 7 / glibc 2.17 for `linux-64` builds. They will also move more of\\nthe packages needed for conda-forge builds into the conda-forge channels\\nmaking builds more reliable."},{"id":"/2020/07/16/moving-from-clang-9-to-clang-10","metadata":{"permalink":"/news/2020/07/16/moving-from-clang-9-to-clang-10","source":"@site/news/2020-07-16-moving-from-clang-9-to-clang-10.md","title":"Moving from clang 9 to clang 10","description":"conda-forge is moving to clang 10 on macOS! Check the release","date":"2020-07-16T00:00:00.000Z","formattedDate":"July 16, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Core Dependency Tree Package Changes","permalink":"/news/2020/07/16/core-dependency-tree-package-changes"},"nextItem":{"title":"CFEP-18: Removing static libraries from the main build","permalink":"/news/2020/07/15/cfep-18-removing-static-libraries-from-the-main-build"}},"content":"conda-forge is moving to clang 10 on macOS! Check the release\\n[notes](https://releases.llvm.org/10.0.0/tools/clang/docs/ReleaseNotes.html#what-s-new-in-clang-10-0-0)\\nfor what is new, breaking, or deprecated."},{"id":"/2020/07/15/cfep-18-removing-static-libraries-from-the-main-build","metadata":{"permalink":"/news/2020/07/15/cfep-18-removing-static-libraries-from-the-main-build","source":"@site/news/2020-07-15-cfep-18-removing-static-libraries-from-the-main-build.md","title":"CFEP-18: Removing static libraries from the main build","description":"With CFEP-18","date":"2020-07-15T00:00:00.000Z","formattedDate":"July 15, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Moving from clang 9 to clang 10","permalink":"/news/2020/07/16/moving-from-clang-9-to-clang-10"},"nextItem":{"title":"cf-mark-broken renamed to admin-requests","permalink":"/news/2020/07/03/cf-mark-broken-renamed-to-admin-requests"}},"content":"With [CFEP-18](https://github.com/conda-forge/cfep/blob/main/cfep-18.md)\\nwe now have a policy on how to deal with static packages. The most\\nimportant change here is that we will be removing static libraries from\\nthe main packages and moving them to `-static` suffixed packages.\\n`-static` packages will not be built by default but only on request."},{"id":"/2020/07/03/cf-mark-broken-renamed-to-admin-requests","metadata":{"permalink":"/news/2020/07/03/cf-mark-broken-renamed-to-admin-requests","source":"@site/news/2020-07-03-cf-mark-broken-renamed-to-admin-requests.md","title":"cf-mark-broken renamed to admin-requests","description":"The cf-mark-broken repo has been renamed to admin-requests. It still","date":"2020-07-03T00:00:00.000Z","formattedDate":"July 3, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"CFEP-18: Removing static libraries from the main build","permalink":"/news/2020/07/15/cfep-18-removing-static-libraries-from-the-main-build"},"nextItem":{"title":"New Process for Marking Packages as Broken","permalink":"/news/2020/05/28/new-process-for-marking-packages-as-broken"}},"content":"The `cf-mark-broken` repo has been renamed to `admin-requests`. It still\\nserves the same purpose. However, we have expanded the capabilities of\\nthe repo to be able to mark packages as not broken."},{"id":"/2020/05/28/new-process-for-marking-packages-as-broken","metadata":{"permalink":"/news/2020/05/28/new-process-for-marking-packages-as-broken","source":"@site/news/2020-05-28-new-process-for-marking-packages-as-broken.md","title":"New Process for Marking Packages as Broken","description":"We are changing the way we mark packages as broken to better match the defaults channel and to","date":"2020-05-28T00:00:00.000Z","formattedDate":"May 28, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"cf-mark-broken renamed to admin-requests","permalink":"/news/2020/07/03/cf-mark-broken-renamed-to-admin-requests"},"nextItem":{"title":"New Staging Process for anaconda.org Uploads","permalink":"/news/2020/05/09/new-staging-process-for-anacondaorg-uploads"}},"content":"We are changing the way we mark packages as `broken` to better match the `defaults` channel and to\\nbetter enable reproducible environments that depended on broken packages. We will now be adding the\\n`broken` label to packages but leaving them on the `main` channel. In order to make sure they do\\nnot appear in the `repodata.json` for the `main` channel, we will be patching the repo data to\\nremove them using the `removals` feature. Users will notice the following changes\\n\\n- The packages on `anaconda.org` will now have both the `main` and the `broken` labels. \\n- All requests to mark packages as broken must be sent to the `cf-mark-broken` repo. \\n- Members of `core` can no longer mark things as broken by hand since the repo data patching must\\n  be done as well. \\n- The package metadata for broken packages may differ slightly from when they were on the `main`\\n  channel. \\n- The only correct source of package metadata is now the `repodata.json` etc on `anaconda.org`. Any\\n  other sources may be missing critical changes."},{"id":"/2020/05/09/new-staging-process-for-anacondaorg-uploads","metadata":{"permalink":"/news/2020/05/09/new-staging-process-for-anacondaorg-uploads","source":"@site/news/2020-05-09-new-staging-process-for-anacondaorg-uploads.md","title":"New Staging Process for anaconda.org Uploads","description":"Starting this week, we are changing the way we upload packages to anaconda.org. We will move from","date":"2020-05-09T00:00:00.000Z","formattedDate":"May 9, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"New Process for Marking Packages as Broken","permalink":"/news/2020/05/28/new-process-for-marking-packages-as-broken"},"nextItem":{"title":"vs2015 to vs2017 Transition","permalink":"/news/2020/03/24/vs2015-to-vs2017-transition"}},"content":"Starting this week, we are changing the way we upload packages to `anaconda.org`. We will move from\\ndirect uploads to the conda-forge `main` channel to using a staging organization/channel combined\\nwith a copy request from the staging channel to the production channel. This new process will allow\\nus to perform some validation on the outputs of feedstocks before they are released.\\n\\nWhat will you see as a feedstock maintainer?\\n\\n- Starting this week, the `admin-migrations` service will be making commits to all feedstocks to\\n  provision them with the necessary configuration, API keys, and tokens.\\n- Each feedstock will now be provisioned with a secret token. This token should not be shared or\\n  taken out of the CI services. It is used to identify the feedstock during the upload process.\\n- The `admin-migrations` service will be setting a new top-level key in the `conda-forge.yml`,\\n  `conda_forge_output_validation: true`. This key indicates to `conda-smithy` that it should\\n  include the output validation calls in the feedstock CI scripts.\\n- Currently open PRs will need to have this key added by hand and then rerendered.\\n- When PRs are running the CI scripts, they will do some initial validation of the feedstock\\n  outputs. If this validation fails, the CI job will fail. Please see the CI logs for the error\\n  message which is printed after `conda-build` runs.\\n- Once a PR is merged to master, the copy from the staging channel to the production channel will\\n  happen automatically.\\n- Should a copy request fail, you will get a notification via a comment on the commit to master.\\n- As part of this process, uploads from `appveyor` will no longer be allowed unless there is a\\n  significant barrier to using `azure`. We have recently upgraded the compiler infrastructure on\\n  `azure` to support this change in policy.\\n\\nDespite our extensive testing, we do not expect this change to be completely smooth, so please bear\\nwith us. As always, if you have any questions, concerns, or trouble, you can find us on Gitter or\\nbump us directly on Github!"},{"id":"/2020/03/24/vs2015-to-vs2017-transition","metadata":{"permalink":"/news/2020/03/24/vs2015-to-vs2017-transition","source":"@site/news/2020-03-24-vs2015-to-vs2017-transition.md","title":"vs2015 to vs2017 Transition","description":"We are formally deprecating vs2015 in two weeks on 2020-04-07 and will","date":"2020-03-24T00:00:00.000Z","formattedDate":"March 24, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"New Staging Process for anaconda.org Uploads","permalink":"/news/2020/05/09/new-staging-process-for-anacondaorg-uploads"},"nextItem":{"title":"Appveyor Deprecation","permalink":"/news/2020/03/23/appveyor-deprecation"}},"content":"We are formally deprecating `vs2015` in two weeks on 2020-04-07 and will\\nmove to `vs2017`. This change will enable us to support the usage of\\n`msbuild` on Azure for the `win` platform and will provide additional\\nsupport for `C++`. Most packages built with `vs2015` can be linked with\\n`vs2017` toolchain (but not vice-versa). An exception is static\\nlibraries compiled with whole program optimization (/GL flag) which may\\nbe incompatible with the `vs2017` toolchain. These static libraries will\\nneed to be rebuilt using `vs2017`."},{"id":"/2020/03/23/appveyor-deprecation","metadata":{"permalink":"/news/2020/03/23/appveyor-deprecation","source":"@site/news/2020-03-23-appveyor-deprecation.md","title":"Appveyor Deprecation","description":"We are now starting to formally deprecate Appveyor in favor of Azure for","date":"2020-03-23T00:00:00.000Z","formattedDate":"March 23, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"vs2015 to vs2017 Transition","permalink":"/news/2020/03/24/vs2015-to-vs2017-transition"},"nextItem":{"title":"Python 2.7 Admin Command Available","permalink":"/news/2020/03/21/python-27-admin-command-available"}},"content":"We are now starting to formally deprecate Appveyor in favor of Azure for\\nbuilds on the `win` platform. Note that we have not been adding appveyor\\nto new feedstocks for a while, so this is not a completely new change in\\npolicy. We will now, however, begin to actively disable Appveyor builds\\non feedstocks not using it by turning off builds for GitHub `push`\\nevents. Additionally, we have been issuing PRs to any remaining\\nfeedstocks to move them to Azure. We are aware that some packages built\\nwith `msbuild` cannot yet be moved to Azure and so are leaving Appveyor\\non for those feedstocks for now."},{"id":"/2020/03/21/python-27-admin-command-available","metadata":{"permalink":"/news/2020/03/21/python-27-admin-command-available","source":"@site/news/2020-03-21-python-27-admin-command-available.md","title":"Python 2.7 Admin Command Available","description":"A webservices admin command is now available to add Python 2.7 back to","date":"2020-03-21T00:00:00.000Z","formattedDate":"March 21, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Appveyor Deprecation","permalink":"/news/2020/03/23/appveyor-deprecation"},"nextItem":{"title":"Python 2.7 and vs2008 Deprecation","permalink":"/news/2020/03/18/python-27-and-vs2008-deprecation"}},"content":"A webservices admin command is now available to add Python 2.7 back to\\nfeedstocks. Put `@conda-forge-admin add python 2.7` in the title on an\\nissue in your feedstock. The admin webservices bot will then issue a PR\\nadding back Python 2.7. Note that this PR will remove other Python\\nbuilds and any `win`, `aarch64`, or `ppc64le` builds. If you want to\\nkeep those, merge the PR into a separate branch on your feedstock."},{"id":"/2020/03/18/python-27-and-vs2008-deprecation","metadata":{"permalink":"/news/2020/03/18/python-27-and-vs2008-deprecation","source":"@site/news/2020-03-18-python-27-and-vs2008-deprecation.md","title":"Python 2.7 and vs2008 Deprecation","description":"- Python 2.7 is no longer supported by the upstream developers as of","date":"2020-03-18T00:00:00.000Z","formattedDate":"March 18, 2020","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Python 2.7 Admin Command Available","permalink":"/news/2020/03/21/python-27-admin-command-available"},"nextItem":{"title":"Clang 9.0.0 and gfortran 7.3.0 as default compilers in OSX","permalink":"/news/2019/09/30/clang-900-and-gfortran-730-as-default-compilers-in-osx"}},"content":"- Python 2.7 is no longer supported by the upstream developers as of\\n2020-01-01. Conda-forge is thus deprecating its Python 2.7 support.\\nConda-forge will provide no ongoing support for Python 2.7 builds and\\nany existing builds are provided on an \\"as-is\\" basis.\\n- A `cf202003` label has been applied to the `conda-forge` channel for those who need a\\nreference to the package index with Python 2.7. \\n- We are removing support for `vs2008` on Windows in conjunction with the deprecation of Python 2.7, as it was only supported to build this version of Python. \\n- We will provide an admin command that will add back Python 2.7 to any\\nfeedstock. Note that as stated above, we cannot provide support for any\\nPython 2.7 builds generated with this admin command. Further, this admin\\ncommand will only work on `osx-64` and `linux-64` platforms."},{"id":"/2019/09/30/clang-900-and-gfortran-730-as-default-compilers-in-osx","metadata":{"permalink":"/news/2019/09/30/clang-900-and-gfortran-730-as-default-compilers-in-osx","source":"@site/news/2019-09-30-clang-900-and-gfortran-730-as-default-compilers-in-osx.md","title":"Clang 9.0.0 and gfortran 7.3.0 as default compilers in OSX","description":"- If you maintain a feedstock that requires a C/C++ compiler, no","date":"2019-09-30T00:00:00.000Z","formattedDate":"September 30, 2019","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Python 2.7 and vs2008 Deprecation","permalink":"/news/2020/03/18/python-27-and-vs2008-deprecation"},"nextItem":{"title":"We overhauled the blas support in conda-forge.","permalink":"/news/2019/03/28/we-overhauled-the-blas-support-in-conda-forge"}},"content":"- If you maintain a feedstock that requires a C/C++ compiler, no\\nchanges necessary. A rerender should be done next time the feedstock is\\nupdated to use the new compiler.\\n- If you maintain a feedstock with a\\nFortran compiler, a PR to upgrade to gfortran 7.3.0 was already issued.\\nIf that PR was merged, there\'s nothing to do. If not, contact core if\\nyou need help migrating."},{"id":"/2019/03/28/we-overhauled-the-blas-support-in-conda-forge","metadata":{"permalink":"/news/2019/03/28/we-overhauled-the-blas-support-in-conda-forge","source":"@site/news/2019-03-28-we-overhauled-the-blas-support-in-conda-forge.md","title":"We overhauled the blas support in conda-forge.","description":"- Our packages now build against NETLIB\u2019s reference implementation.","date":"2019-03-28T00:00:00.000Z","formattedDate":"March 28, 2019","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Clang 9.0.0 and gfortran 7.3.0 as default compilers in OSX","permalink":"/news/2019/09/30/clang-900-and-gfortran-730-as-default-compilers-in-osx"},"nextItem":{"title":"It has happened! Conda-forge has migrated to the latest compilers \ud83c\udf89.","permalink":"/news/2019/01/22/it-has-happened-conda-forge-has-migrated-to-the-latest-compilers"}},"content":"- Our packages now build against NETLIB\u2019s reference implementation.\\n- You as a user can now choose the implementation available at runtime.\\nFor more information please refer to the [documentation](/docs/maintainer/knowledge_base/#knowledge-blas)."},{"id":"/2019/01/22/it-has-happened-conda-forge-has-migrated-to-the-latest-compilers","metadata":{"permalink":"/news/2019/01/22/it-has-happened-conda-forge-has-migrated-to-the-latest-compilers","source":"@site/news/2019-01-22-it-has-happened-conda-forge-has-migrated-to-the-latest-compilers.md","title":"It has happened! Conda-forge has migrated to the latest compilers \ud83c\udf89.","description":"If you:","date":"2019-01-22T00:00:00.000Z","formattedDate":"January 22, 2019","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"We overhauled the blas support in conda-forge.","permalink":"/news/2019/03/28/we-overhauled-the-blas-support-in-conda-forge"},"nextItem":{"title":"The rebuild is moving along nicely with almost a third of the packages completed.","permalink":"/news/2018/10/12/the-rebuild-is-moving-along-nicely-with-almost-a-third-of-the-packages-completed"}},"content":"If you:\\n\\n- maintain a compiled feedstock, it will likely need to be\\nrerender\\n- need to roll back to the old compilers, you can use the\\n\\"cf201901\\" label."},{"id":"/2018/10/12/the-rebuild-is-moving-along-nicely-with-almost-a-third-of-the-packages-completed","metadata":{"permalink":"/news/2018/10/12/the-rebuild-is-moving-along-nicely-with-almost-a-third-of-the-packages-completed","source":"@site/news/2018-10-12-the-rebuild-is-moving-along-nicely-with-almost-a-third-of-the-packages-completed.md","title":"The rebuild is moving along nicely with almost a third of the packages completed.","description":"Recently completed are NumPy and Openblas which should open up much of","date":"2018-10-12T00:00:00.000Z","formattedDate":"October 12, 2018","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"It has happened! Conda-forge has migrated to the latest compilers \ud83c\udf89.","permalink":"/news/2019/01/22/it-has-happened-conda-forge-has-migrated-to-the-latest-compilers"},"nextItem":{"title":"A minimal python 3.7 build is now available across all platforms and both compilers!","permalink":"/news/2018/09/24/a-minimal-python-37-build-is-now-available-across-all-platforms-and-both-compilers"}},"content":"Recently completed are NumPy and Openblas which should open up much of\\nthe python numeric stack. We\'re only about 5 feedstocks away from\\nopening up all of R as well."},{"id":"/2018/09/24/a-minimal-python-37-build-is-now-available-across-all-platforms-and-both-compilers","metadata":{"permalink":"/news/2018/09/24/a-minimal-python-37-build-is-now-available-across-all-platforms-and-both-compilers","source":"@site/news/2018-09-24-a-minimal-python-37-build-is-now-available-across-all-platforms-and-both-compilers.md","title":"A minimal python 3.7 build is now available across all platforms and both compilers!","description":"Yay!","date":"2018-09-24T00:00:00.000Z","formattedDate":"September 24, 2018","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"The rebuild is moving along nicely with almost a third of the packages completed.","permalink":"/news/2018/10/12/the-rebuild-is-moving-along-nicely-with-almost-a-third-of-the-packages-completed"},"nextItem":{"title":"Deprecation notice for Python 3.5","permalink":"/news/2018/09/24/deprecation-notice-for-python-35"}},"content":"Yay!"},{"id":"/2018/09/24/deprecation-notice-for-python-35","metadata":{"permalink":"/news/2018/09/24/deprecation-notice-for-python-35","source":"@site/news/2018-09-24-deprecation-notice-for-python-35.md","title":"Deprecation notice for Python 3.5","description":"As we start building out more of the Python 3.7 stack, we will no longer","date":"2018-09-24T00:00:00.000Z","formattedDate":"September 24, 2018","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"A minimal python 3.7 build is now available across all platforms and both compilers!","permalink":"/news/2018/09/24/a-minimal-python-37-build-is-now-available-across-all-platforms-and-both-compilers"},"nextItem":{"title":"The compiler migration is in full swing.","permalink":"/news/2018/09/20/the-compiler-migration-is-in-full-swing"}},"content":"As we start building out more of the Python 3.7 stack, we will no longer\\nbe building Python 3.5 packages.\\nNo new python 3.5 packages will be built after 2018-10-01."},{"id":"/2018/09/20/the-compiler-migration-is-in-full-swing","metadata":{"permalink":"/news/2018/09/20/the-compiler-migration-is-in-full-swing","source":"@site/news/2018-09-20-the-compiler-migration-is-in-full-swing.md","title":"The compiler migration is in full swing.","description":"The bot will be making the rounds and modernizing more than 4000","date":"2018-09-20T00:00:00.000Z","formattedDate":"September 20, 2018","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Deprecation notice for Python 3.5","permalink":"/news/2018/09/24/deprecation-notice-for-python-35"},"nextItem":{"title":"Conda forge now has a magical status bar for tracking the progress of migrations.","permalink":"/news/2018/09/10/conda-forge-now-has-a-magical-status-bar-for-tracking-the-progress-of-migrations"}},"content":"The bot will be making the rounds and modernizing more than 4000\\npackages. This is going to take a few months to get done so bear with\\nus."},{"id":"/2018/09/10/conda-forge-now-has-a-magical-status-bar-for-tracking-the-progress-of-migrations","metadata":{"permalink":"/news/2018/09/10/conda-forge-now-has-a-magical-status-bar-for-tracking-the-progress-of-migrations","source":"@site/news/2018-09-10-conda-forge-now-has-a-magical-status-bar-for-tracking-the-progress-of-migrations.md","title":"Conda forge now has a magical status bar for tracking the progress of migrations.","description":"You can find this at","date":"2018-09-10T00:00:00.000Z","formattedDate":"September 10, 2018","tags":[],"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"The compiler migration is in full swing.","permalink":"/news/2018/09/20/the-compiler-migration-is-in-full-swing"}},"content":"You can find this at\\n[conda-forge.org/status](https://conda-forge.org/status)."}]}')}}]);