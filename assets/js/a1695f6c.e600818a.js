"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[4901],{77403:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var i=s(85893),o=s(11151);const t={title:"2019-01-09"},r="2019-01-09 conda-forge meeting",l={id:"orga/minutes/2019-01-09",title:"2019-01-09",description:"Pinned Items",source:"@site/docs/orga/minutes/2019-01-09.md",sourceDirName:"orga/minutes",slug:"/orga/minutes/2019-01-09",permalink:"/docs/orga/minutes/2019-01-09",draft:!1,unlisted:!1,editUrl:"https://github.com/zklaus/conda-forge.github.io/tree/refs/heads/main/docs/orga/minutes/2019-01-09.md",tags:[],version:"current",lastUpdatedAt:1709213755,formattedLastUpdatedAt:"Feb 29, 2024",frontMatter:{title:"2019-01-09"},sidebar:"docs",previous:{title:"2019-01-23",permalink:"/docs/orga/minutes/2019-01-23"},next:{title:"2018-11-27",permalink:"/docs/orga/minutes/2018-11-27"}},c={},a=[];function d(n){const e={a:"a",h1:"h1",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"2019-01-09-conda-forge-meeting",children:"2019-01-09 conda-forge meeting"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Pinned Items"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Zoom instructions: ",(0,i.jsx)(e.a,{href:"https://paper.dropbox.com/doc/How-to-connect-to-zoom-odl94oveHyiRv6UqTtZE5",children:"+How to connect to zoom"})]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"New items"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Journal article update\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge-paper",children:"https://github.com/conda-forge/conda-forge-paper"})}),"\n",(0,i.jsxs)(e.li,{children:["A draft of a skeleton is in PR, comments, edits, and more are encouraged! ",(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge-paper/pulls",children:"https://github.com/conda-forge/conda-forge-paper/pulls"})]}),"\n",(0,i.jsx)(e.li,{children:"Who should be authors on the paper?"}),"\n",(0,i.jsxs)(e.li,{children:["xref bioconda nature methods paper: ",(0,i.jsx)(e.a,{href:"https://www.nature.com/articles/s41592-018-0046-7",children:"https://www.nature.com/articles/s41592-018-0046-7"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Elections\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Sylvain\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Pending Mike for vote tallies\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Pole is complete, Mike will post results soon"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Matthew Becker\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["done (or at least on ",(0,i.jsx)(e.a,{href:"https://github.com/orgs/conda-forge/teams/staged-recipes/members",children:"https://github.com/orgs/conda-forge/teams/staged-recipes/members"})," \u2013 nothing else to do, right? we should document that)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Meta Channel\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/regro/conda-metachannel",children:"https://github.com/regro/conda-metachannel"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["New Arches\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["aarch64 and ppc building\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Shippable"}),"\n",(0,i.jsx)(e.li,{children:"Qemu on CI"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"When to add gcc7 to main or flip the channels?\n- Proposal: Jan 15th"}),"\n",(0,i.jsx)(e.li,{children:"Conda-forge on Open Source Directions"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Previous items"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["CloudFlare Migration\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Sophia will add a diagram of the system"}),"\n",(0,i.jsx)(e.li,{children:"To go live tomorrow, Wed Nov 28, morning (~9 AM central).  Anaconda will monitor it actively."}),"\n",(0,i.jsx)(e.li,{children:"MichaelS/Sophia will announce this start time on gitter along with the diagram and a rehash of the reasoning and changes proposed."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:'NumFOCUS Small Grant Proposal accept and we just got 3000USD for the "conda-forge sprint at SciPy 2019"'}),"\n",(0,i.jsxs)(e.li,{children:["GSoC 2019\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://developers.google.com/open-source/gsoc/timeline",children:"https://developers.google.com/open-source/gsoc/timeline"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Compiler rebuild status\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"python done for both compiler stacks"}),"\n",(0,i.jsx)(e.li,{children:"Qt: try to build on Azure?"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["(DISCUSSED/Postponed) New approach to reducing CI load ",(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge.github.io/issues/647",children:"https://github.com/conda-forge/conda-forge.github.io/issues/647"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Might be possible to not be totally insecure with work. But nobody is volunteering to do that work right now. :)"}),"\n",(0,i.jsx)(e.li,{children:"Pushing PR builds to a staging channel might be a nice UX improvement so you can test anyway."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Copying packages to gcc7 label ",(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-smithy/issues/892",children:"https://github.com/conda-forge/conda-smithy/issues/892"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"MPI metapackage"}),"\n",(0,i.jsx)(e.li,{children:"Just wait for new conda 4.6 with strict channel priority, and then add main label to those builds"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["(DISCUSSED/Postponed)Mergify = auto-merge version bump PRs when CIs pass?\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://github.com/conda-forge/conda-forge-maintenance/issues/49",children:"https://github.com/conda-forge/conda-forge-maintenance/issues/49"})}),"\n",(0,i.jsx)(e.li,{children:"Worry about bot not detecting dependency changes"}),"\n",(0,i.jsx)(e.li,{children:"Definitely opt-in only at first"}),"\n",(0,i.jsx)(e.li,{children:'One possibility: only after an approved review (so you can say "merge assuming CIs pass")'}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.li,{children:"Add overlinking error flag by default?"}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},11151:(n,e,s)=>{s.d(e,{Z:()=>l,a:()=>r});var i=s(67294);const o={},t=i.createContext(o);function r(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);